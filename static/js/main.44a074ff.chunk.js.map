{"version":3,"sources":["requests.js","axios.js","components/Nav.js","components/Banner.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Nav","className","href","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","alt","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44a074ff.chunk.js","sourcesContent":["{\r\n  /* API KEY from TMDB*/\r\n}\r\nconst API_KEY = \"f5a07de26f8d5c4478107c654093e6e1\";\r\n\r\n{\r\n  /* Data request from TMDB*/\r\n}\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\n{\r\n  /* Base URL to make requests to the movie database*/\r\n}\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <h1 className=\"nav__logo\">\r\n        <a href=\"/\">FLIXNET</a>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"top center\",\r\n      }}\r\n    >\r\n      <Nav />\r\n\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <p className=\"banner__description\">{truncate(movie?.overview, 150)}</p>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button banner__button-play\">Play</button>\r\n          <button className=\"banner__button banner__button-mylist\">My List</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"banner--fadebottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row-posters\">\r\n        {movies.map((movie) => (\r\n          <img key={movie.id} onClick={() => handleClick(movie)} className={`row-poster ${isLargeRow && \"row-poster--large\"}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import \"./App.scss\";\nimport requests from \"./requests\";\nimport Banner from \"./components/Banner\";\nimport Row from \"./components/Row\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Banner />\n      <Row title=\"FLIXNET ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}